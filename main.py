
HORIZONTAL = 0
VERTICAL = 1

labyrinth = [[".",".",".",".",".",".",".",".","."],
            ["#",".",".",".","#",".",".",".","."],
            [".",".",".",".","#",".",".",".","."],
            [".","#",".",".",".",".",".","#","."],
            [".","#",".",".",".",".",".","#","."]]

labyrinth2 = [[".",".",".",".",".",".",".",".","."],
            ["#",".",".",".","#",".",".","#","."],
            [".",".",".",".","#",".",".",".","."],
            [".","#",".",".",".",".",".","#","."],
            [".","#",".",".",".",".",".","#","."]]

labyrinth3 = [[".",".","."],
            [".",".","."],
            [".",".","."]]

labyrinth4 = [[".",".",".",".",".",".",".",".",".","."],
            [".","#",".",".",".",".","#",".",".","."],
            [".","#",".",".",".",".",".",".",".","."],
            [".",".",".",".",".",".",".",".",".","."],
            [".",".",".",".",".",".",".",".",".","."],
            [".","#",".",".",".",".",".",".",".","."],
            [".","#",".",".",".","#",".",".",".","."],
            [".",".",".",".",".",".","#",".",".","."],
            [".",".",".",".",".",".",".",".",".","."],
            [".",".",".",".",".",".",".",".",".","."]]

def solve_maze(maze):
    rows = len(maze)
    cols = len(maze[0])
    start_direction = HORIZONTAL

    def is_valid(x, y):
        return 0 <= x < rows and 0 <= y < cols and maze[x][y] == "."
    
    def dfs(x, y, direction, steps):
        return 0 # ToDo
    
    result, steps = dfs(0, 1, start_direction, 0)
    
    if result:
        return maze, steps
    else:
        return None

maze=labyrinth

solucion, num_pasos = solve_maze(maze)
if solucion:
    print(num_pasos)
else:
    print("-1")
